version: "3.9"

services:
  app:
    build:
      context: .
    ports:
      - "8888:8000"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
    env_file:
      - .env
    depends_on:
      - db
    volumes:
      - ./backend:/app
    restart: on-failure
    command: >
      sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
  
  web:
    image: nginx:alpine
    ports:
      - "80:80"
    depends_on:
      - app
    volumes:
      - ./client:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf

  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - ./postgres:/var/lib/postgres
    restart: on-failure

  redis:
    image: redis
    ports:
      - "6379:6379"

  celery:
    build:
      context: .
    env_file:
      - .env
    depends_on:
      - db
      - redis
    volumes:
      - ./backend:/app
    restart: on-failure
    command: >
      sh -c "celery -A configs worker -l info -B"